#!/usr/bin/env ruby

require 'optparse'
require 'pp'
require 'yaml'

require_relative '../lib/scanner'
require_relative '../lib/parser'
require_relative '../lib/evaluator'

repl = false

HELP =  <<-EOH
Usage: byron [<command>] [options] [< in [> out]] [file]

Commands:
  scan
  read
  evaluate

Options:
  -u, --use <plugin>,...      Use one or more plugins
  -r, --reporter <reporter>   Set the reporter to use
  -i, --interactive           Start an interactive console
  -v, --version               Print out Byron version
  -h, --help                  Display this help text
EOH

def evaluate(text)
  scanner = Byron::Scanner.new

  begin
    document = scanner.scan text
    puts document.to_yaml
  rescue Exception => e
    puts "\x1b[33m#{e.message}\x1b[0m"
    puts "\x1b[33m#{e.backtrace.inspect}\x1b[0m"

  end
end

OptionParser.new do |opts|

  opts.on '-h', '--help' do
    puts HELP
  end

  opts.on '-i', '--interactive', '--repl' do
    repl = true
  end

  opts.on '-v', '--version' do
    puts '0.0.1'
  end

end.parse!

ARGV.each do |file|
end

if repl
  begin
    loop do
      print '> '
      text = gets
      evaluate text
    end
  rescue Interrupt => e
    puts ''
  rescue Exception => e
    p e
  end
end
